<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string name="app_name">Friction</string>
    <string name="title_section1">My Feed</string>
    <string name="title_section2">Find</string>
    <string name="title_section3">Friends</string>
    <string name="title_section4">Pings</string>
    <string name="title_section5">About Me</string>
    <string name="title_section6">Help and Feedback</string>
    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>
    <string name="action_example">Example action</string>
    <string name="action_settings">Settings</string>
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="really_long_string">Note that a ScrollView can only contain a single child element so if you need multiple things to
        be scrollable, you need to wrap that content into a layout as shown above. In certain situations, you want to position content
        beneath the end of the scrollable content area. For example for a "terms of service" where you can only accept once youve scrolled
        through all the content. In this case, you might need to apply the android:fillViewport property to "true". Read this post by Romain
        Guy for a detailed look at this use case. I have dynamically used to get this . I have a LinearLayout and within this used ScrollView
        as a child. Then i take again LinearLayout and add what ever View u want to this LinearLayout and then this LinearLayout add to ScrollView
        and finally add this ScrollView to LinearLayout. Then u can get scroll in ur ScrollView and nothing will left to visible. LinearLayout(Parent)
        --ScrollView(child of LinerLayout) -- LinearLayout(child of ScrollView)-- add here textView, Buttons , spinner etc whatever u want . Then
        add this LinearLayout to ScrollView. Because only one CHILD for ScrollView applicable and last add this ScrollView to LinearLayout. If defined
        area is exceed from Screen size then u will get a Scroll within ScrollView. The effect I\'m trying to achieve is to have some text and a
        button below it (inside the LinearLayout in level 4 there\'s just a button). The text can be big enough to need a scrollbar, in which case
        I want the user to have to scroll down in order to see the button. In case the text is not big enough for a scroll bar, I want the LinearLayout
        containing the button to stick to the bottom of the screen.</string>

</resources>
